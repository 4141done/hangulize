# -*- coding: utf-8 -*-
from hangulize import *


class Czech(Language):
    """For transcribing Czech."""

    vowels = 'aeiouy'
    consonants = 'cCfkpsStT'
    notation = Notation(
        (u'č',                  'C'),
        (u'ď',                  'D'),
        (u'ě',                  'je'),
        (u'ň',                  'N'),
        (u'ř',                  'rZ'),
        (u'š',                  'S'),
        (u'ť',                  'T'),
        (u'ž',                  'Z'),
        ('w',                   'v'),
        ('b{<consonants>}',     'p'),
        ('b$',                  'p'),
        ('d{<consonants>}',     't'),
        ('d$',                  't'),
        ('D{<consonants>}',     'T'),
        ('D$',                  'T'),
        ('g{<consonants>}',     'k'),
        ('g$',                  'k'),
        ('v{<consonants>}',     'f'),
        ('v$',                  'f'),
        ('z{<consonants>}',     's'),
        ('z$',                  's'),
        ('Z{<consonants>}',     'S'),
        ('Z$',                  'S'),
        ('D{@}',                'dJ'),
        ('D',                   'di'),
        ('N{@}',                'nJ'),
        ('N',                   'n'),
        ('S{@}',                'sJ'),
        ('S$',                  'si'),
        ('S',                   'sJu'),
        ('T{@}',                'tJ'),
        ('T',                   'ti'),
        ('Z{@}',                'z'),
        ('Z',                   'zu'),
        ('xx',                  'x'),
        ('^x',                  'z'),
        ('x',                   'ks'),
        ('qu',                  'kv'),
        ('q',                   'k'),
        ('ch',                  'H'),
        ('aa',                  'a'),
        ('bb',                  'b'),
        ('dd',                  'd'),
        ('ee',                  'e'),
        ('ff',                  'f'),
        ('gg',                  'g'),
        ('hh',                  'h'),
        ('jj',                  'ij'),
        ('ii',                  'i'),
        ('^j{@}',               'J'),
        ('{@}j{@}',             'J'),
        ('sje',                 'sJe'),
        ('je',                  'e'),
        ('{n|d|s|t}j',          'J'),
        ('j',                   'i'),
        ('ij',                  'i'),
        ('yj',                  'y'),
        ('kk',                  'k'),
        ('ll',                  'l'),
        ('{@}mm{@}',            Jongseong(M), Choseong(M)),
        ('mm',                  'm'),
        ('{@}nn{@}',            Jongseong(N), Choseong(N)),
        ('nn',                  'n'),
        ('oo',                  'o'),
        ('pp',                  'p'),
        ('rr',                  'r'),
        ('ss',                  's'),
        ('tt',                  't'),
        ('uu',                  'u'),
        ('vv',                  'v'),
        ('^y{@}',               'J'),
        ('yy',                  'y'),
        ('y',                   'i'),
        ('zz',                  'z'),
        ('{l|m|n}j$',           None),
        ('je',                  'e'),
        ('^k',                  Choseong(K)),
        ('{@}k{c|C|f|H|s|t|p}', Jongseong(G)),
        ('^p',                  Choseong(P)),
        ('{@}p{c|C|f|H|s|t|k}', Jongseong(B)),
        ('k',                   Choseong(K)),
        ('p',                   Choseong(P)),
        ('C{@}',                Choseong(C)),
        ('C',                   Choseong(C), Jungseong(I)),
        ('b',                   Choseong(B)),
        ('c',                   Choseong(C)),
        ('d',                   Choseong(D)),
        ('f',                   Choseong(P)),
        ('g',                   Choseong(G)),
        ('h',                   Choseong(H)),
        ('H',                   Choseong(H)),
        ('^m',                  'P'),
        ('^n',                  'Q'),
        ('^l',                  Choseong(L)),
        ('{m|n}l',              Choseong(L)),
        ('l{@}',                Jongseong(L), Choseong(L)),
        ('l',                   Jongseong(L)),
        ('P',                   Choseong(M)),
        ('m{@|r}',              Choseong(M)),
        ('m',                   Jongseong(M)),
        ('Q',                   Choseong(N)),
        ('n{@|J}',              Choseong(N)),
        ('n',                   Jongseong(N)),
        ('r',                   Choseong(L)),
        ('s',                   Choseong(S)),
        ('t',                   Choseong(T)),
        ('v',                   Choseong(B)),
        ('z',                   Choseong(J)),
        ('Ja',                  Jungseong(YA)),
        ('Je',                  Jungseong(YE)),
        ('Ji',                  Jungseong(I)),
        ('Jo',                  Jungseong(YO)),
        ('Ju',                  Jungseong(YU)),
        ('a',                   Jungseong(A)),
        ('e',                   Jungseong(E)),
        ('i',                   Jungseong(I)),
        ('o',                   Jungseong(O)),
        ('u',                   Jungseong(U))
    )

    def normalize(self, string):
        def normalize_only_unsafe(string):
            map = {u'Č': u'č',
                   u'Ď': u'ď',
                   u'Ě': u'ě',
                   u'Ň': u'ň',
                   u'Ř': u'ř',
                   u'Š': u'š',
                   u'Ť': u'ť',
                   u'Ž': u'ž'}
            safe = map.keys() + map.values()
            for c in string:
                if c not in safe:
                    yield normalize_roman(c)
                elif c in map:
                    yield map[c]
                else:
                    yield c
        return ''.join(normalize_only_unsafe(string))


cs = Czech

